{"name": "test_get_my_pets_page", "status": "failed", "statusDetails": {"message": "AssertionError: assert 4 == ['Tom', 'Tom', 'Барбоскин', 'Jack', 'Cat', 'Tom', ...]\n +  where 4 = len({'Cat', 'Jack', 'Tom', 'Барбоскин'})", "trace": "web_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"42f4dde77a2ca7c6c37eed987f791ac4\")>\n\n    def test_get_my_pets_page(web_browser):\n    \n        page = MyPetsPage(web_browser)\n        page.btn_my_pets.click()\n        # переходим на страницу мои питомцы\n    \n        page.wait_page_loaded()\n        # добавляем явное ожидание элементов на странице(метод прописан в pages.base в классе WebPage)\n    \n        data_pets = page.data_user.get_text()\n        my_pets_images = page.images_my_pet.get_attribute('src')\n        my_pets_names = page.name_my_pet.get_text()\n        my_pets_breeds = page.breed_my_pet.get_text()\n        my_pets_years = page.year_my_pet.get_text()\n    \n    \n        for data in data_pets:\n            if 'Питомцев' in data:\n                info = data.split(':')\n                pets_count = int(info[1])\n                # получаем количество моих питомцев\n                assert len(page.pet.find()) == pets_count\n                # проверяем все ли питомцы отображаются на странице\n                assert len(my_pets_images) > pets_count//2\n                # проверяем что больше половины питомцев имеют фото\n    \n    \n    \n        for my_pets_name in my_pets_names:\n            assert len(my_pets_name) > 0\n        # проверяем что у всех питомцев есть имя\n    \n        unique_names = set(my_pets_names)\n>       assert len(unique_names) == my_pets_names\nE       AssertionError: assert 4 == ['Tom', 'Tom', 'Барбоскин', 'Jack', 'Cat', 'Tom', ...]\nE        +  where 4 = len({'Cat', 'Jack', 'Tom', 'Барбоскин'})\n\ntests\\test_my_pets.py:38: AssertionError"}, "attachments": [{"name": "stdout", "source": "4118054e-0428-4f5b-ac2c-ec2c4b25cdf2-attachment.txt", "type": "text/plain"}], "start": 1700457921585, "stop": 1700457929601, "uuid": "b5a564e7-88ff-445d-8aae-c9aa11592818", "historyId": "acf0933e5395c4e57ddc643f9d82eba0", "testCaseId": "acf0933e5395c4e57ddc643f9d82eba0", "fullName": "Users.User.PetFriendsProject.tests.test_my_pets#test_get_my_pets_page", "labels": [{"name": "parentSuite", "value": "Users.User.PetFriendsProject.tests"}, {"name": "suite", "value": "test_my_pets"}, {"name": "host", "value": "Dsesktop-DmitMark"}, {"name": "thread", "value": "6320-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Users.User.PetFriendsProject.tests.test_my_pets"}]}